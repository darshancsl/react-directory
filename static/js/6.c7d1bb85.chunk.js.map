{"version":3,"file":"static/js/6.c7d1bb85.chunk.js","mappings":"+LAIA,MAuGA,EAvGmBA,KACjB,IAAIC,EAAM,CACR,CAAEC,GAAI,EAAGC,OAAO,GAChB,CAAED,GAAI,EAAGC,OAAO,GAChB,CAAED,GAAI,EAAGC,OAAO,GAChB,CAAED,GAAI,EAAGC,OAAO,GAChB,CAAED,GAAI,EAAGC,OAAO,GAChB,CAAED,GAAI,EAAGC,OAAO,GAChB,CAAED,GAAI,EAAGC,OAAO,GAChB,CAAED,GAAI,EAAGC,OAAO,GAChB,CAAED,GAAI,EAAGC,OAAO,IAElB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAASL,IAClCM,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,MAC1BG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,IAEnCK,EAAeC,IACnB,IAAIC,EAAOT,EAASU,KAAKC,GAChBA,EAAGb,GAAGc,aAAeJ,EAAEK,OAAOf,KAAmB,IAAba,EAAGZ,MAC1C,IAAKY,EAAIZ,MAAOI,GAChBQ,IAENV,EAAYQ,GACZL,GAASU,GAAmB,MAATA,EAAe,IAAM,KAAK,EAyC/C,OAPAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAhCaC,KACnB,MAAMC,EAAgB,CACpB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGT,IAAK,MAAMC,KAASD,EAAe,CACjC,MAAOE,EAAGC,EAAGC,GAAKH,EAClB,GACEF,EAAMG,GAAGrB,OACTkB,EAAMG,GAAGrB,QAAUkB,EAAMI,GAAGtB,OAC5BkB,EAAMG,GAAGrB,QAAUkB,EAAMK,GAAGvB,MAE5B,OAAOkB,EAAMG,GAAGrB,KAEpB,CAEA,OAAO,IAAI,EASIwB,CAAYvB,GACvBgB,GACFV,EAAYU,EACd,GACC,CAAChB,KAGFwB,EAAAA,EAAAA,MAAA,WAASC,UAAU,aAAYC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,2CAA0CC,SAAC,iBACxDrB,IACCmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,EACzDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oBAAmBC,SAAA,WAAAE,OAAavB,EAAQ,kBACtDsB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,YAAYI,QAnBtBC,KAChB7B,EAAYJ,GACZS,EAAY,GAAG,EAiB0CoB,SAAC,gBAMxDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SACnB1B,EAAS+B,QAAO,CAACC,EAAMC,EAAMC,KACxBA,EAAQ,IAAM,GAChBF,EAAKG,MACHR,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAA0BP,QAAStB,EAAYmB,SAChD1B,EAASqC,MAAMH,EAAOA,EAAQ,GAAGxB,KAAI4B,IAAA,IAAC,GAAExC,EAAE,MAAEC,GAAOuC,EAAA,OAClDX,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CACFd,UAAU,mDAEV3B,GAAI0C,OAAO1C,GAAI4B,UAEfC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,iCAAgCC,UACnC,IAAV3B,EAAkB,GAAKA,KAJrBD,EAMD,KACN,OAAA8B,OAXaM,EAAQ,KAetBF,IACN,QAEG,C,8CCtGd,SAAiB,C","sources":["Projects/TickTacToe/TickTacToe.jsx","webpack://react-directory/./src/Projects/TickTacToe/TickTacToe.css?04c1"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./TickTacToe.css\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst TickTacToe = () => {\r\n  let arr = [\r\n    { id: 0, value: false },\r\n    { id: 1, value: false },\r\n    { id: 2, value: false },\r\n    { id: 3, value: false },\r\n    { id: 4, value: false },\r\n    { id: 5, value: false },\r\n    { id: 6, value: false },\r\n    { id: 7, value: false },\r\n    { id: 8, value: false },\r\n  ];\r\n  const [gameList, setGameList] = useState(arr);\r\n  const [turn, setTurn] = useState(\"X\");\r\n  const [isWinner, setIsWinner] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n    let temp = gameList.map((el) => {\r\n      return el.id.toString() === e.target.id && el.value === false\r\n        ? { ...el, value: turn }\r\n        : el;\r\n    });\r\n    setGameList(temp);\r\n    setTurn((prev) => (prev === \"X\" ? \"O\" : \"X\"));\r\n  };\r\n\r\n  const checkWinner = (board) => {\r\n    const winningCombos = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for (const combo of winningCombos) {\r\n      const [a, b, c] = combo;\r\n      if (\r\n        board[a].value &&\r\n        board[a].value === board[b].value &&\r\n        board[a].value === board[c].value\r\n      ) {\r\n        return board[a].value;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setGameList(arr);\r\n    setIsWinner(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const winner = checkWinner(gameList);\r\n    if (winner) {\r\n      setIsWinner(winner);\r\n    }\r\n  }, [gameList]);\r\n\r\n  return (\r\n    <section className='bg-default'>\r\n      <h1 className='fs-2 fw-bold text-center py-4 text-light'>Tick Tac Toe</h1>\r\n      {isWinner && (\r\n        <div className='d-flex justify-content-center w-75 mx-auto'>\r\n          <h1 className='text-success mb-4'>{`Player \"${isWinner}\" is Winner`}</h1>\r\n          <div>\r\n            <button className='reset-btn' onClick={resetGame}>\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className='board'>\r\n        {gameList.reduce((rows, item, index) => {\r\n          if (index % 3 === 0) {\r\n            rows.push(\r\n              <Row key={`row-${index / 3}`} onClick={handleClick}>\r\n                {gameList.slice(index, index + 3).map(({ id, value }) => (\r\n                  <Col\r\n                    className='justify-content-center align-items-center d-flex'\r\n                    key={id}\r\n                    id={String(id)}\r\n                  >\r\n                    <span className='mb-2 text-success fs-1 fw-bold'>\r\n                      {value === false ? \"\" : value}\r\n                    </span>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            );\r\n          }\r\n          return rows;\r\n        }, [])}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TickTacToe;\r\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["TickTacToe","arr","id","value","gameList","setGameList","useState","turn","setTurn","isWinner","setIsWinner","handleClick","e","temp","map","el","toString","target","prev","useEffect","winner","board","winningCombos","combo","a","b","c","checkWinner","_jsxs","className","children","_jsx","concat","onClick","resetGame","reduce","rows","item","index","push","Row","slice","_ref","Col","String"],"sourceRoot":""}